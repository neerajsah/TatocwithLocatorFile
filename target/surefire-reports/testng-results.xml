<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" total="6" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="test.LocatorTatocTestNGTest" duration-ms="77937" started-at="2018-07-02T10:32:49Z" finished-at="2018-07-02T10:34:07Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="77937" started-at="2018-07-02T10:32:49Z" finished-at="2018-07-02T10:34:07Z">
      <class name="test.LocatorTatocTestNGTest">
        <test-method status="FAIL" signature="launchBrowser()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="launchBrowser" is-config="true" duration-ms="0" started-at="2018-07-02T16:02:49Z" finished-at="2018-07-02T16:02:49Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot determine loading status
from unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=67.0.3396.99)
  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'ASDP1580PO02037', ip: '10.0.24.132', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565498 (ea082db3280dd6..., userDataDir: C:\Users\NEERAJ~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 67.0.3396.99, webStorageEnabled: true}
Session ID: 05de221f93af60ad0781fc6600073194]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=67.0.3396.99)
  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'ASDP1580PO02037', ip: '10.0.24.132', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565498 (ea082db3280dd6..., userDataDir: C:\Users\NEERAJ~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 67.0.3396.99, webStorageEnabled: true}
Session ID: 05de221f93af60ad0781fc6600073194
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:271)
	at test.LocatorTatocTestNGTest.launchBrowser(LocatorTatocTestNGTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:109)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="SKIP" signature="callBasic()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callBasic" duration-ms="5" started-at="2018-07-02T16:04:07Z" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callBasic -->
        <test-method status="SKIP" signature="callGrid()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callGrid" duration-ms="0" started-at="2018-07-02T16:04:07Z" depends-on-methods="test.LocatorTatocTestNGTest.callBasic" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callGrid -->
        <test-method status="SKIP" signature="callDrag()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callDrag" duration-ms="1" started-at="2018-07-02T16:04:07Z" depends-on-methods="test.LocatorTatocTestNGTest.callFrame" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callDrag -->
        <test-method status="SKIP" signature="callFrame()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callFrame" duration-ms="0" started-at="2018-07-02T16:04:07Z" depends-on-methods="test.LocatorTatocTestNGTest.callGrid" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callFrame -->
        <test-method status="SKIP" signature="callPop()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callPop" duration-ms="0" started-at="2018-07-02T16:04:07Z" depends-on-methods="test.LocatorTatocTestNGTest.callDrag" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callPop -->
        <test-method status="SKIP" signature="callCookie()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="callCookie" duration-ms="0" started-at="2018-07-02T16:04:07Z" depends-on-methods="test.LocatorTatocTestNGTest.callPop" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callCookie -->
        <test-method status="SKIP" signature="closeBrowser()[pri:0, instance:test.LocatorTatocTestNGTest@7f63425a]" name="closeBrowser" is-config="true" duration-ms="0" started-at="2018-07-02T16:04:07Z" finished-at="2018-07-02T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- test.LocatorTatocTestNGTest -->
    </test> <!-- Command line test -->
  </suite> <!-- test.LocatorTatocTestNGTest -->
</testng-results>
